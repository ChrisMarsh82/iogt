# Generated by Django 3.1.13 on 2021-10-27 07:20

from django.db import migrations, models
import django.db.models.deletion
import home.blocks
import messaging.blocks
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
import wagtailmarkdown.blocks
import wagtailmenus.models.menus
import wagtailmenus.models.mixins


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0059_apply_collection_ordering'),
        ('home', '0022_merge_20211020_0850'),
    ]

    operations = [
        migrations.AlterField(
            model_name='article',
            name='body',
            field=wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(form_classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock(features=['h2', 'h3', 'h4', 'bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link', 'image'])), ('markdown', wagtailmarkdown.blocks.MarkdownBlock(icon='code')), ('image', wagtail.images.blocks.ImageChooserBlock()), ('list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.CharBlock(label='Item'))), ('numbered_list', wagtail.core.blocks.ListBlock(wagtail.core.blocks.CharBlock(label='Item'), template='blocks/numbered_list.html')), ('page_button', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock()), ('text', wagtail.core.blocks.CharBlock(max_length=255, required=False))])), ('embedded_poll', home.blocks.EmbeddedQuestionnaireChooserBlock(page_type=['questionnaires.Poll'])), ('embedded_survey', home.blocks.EmbeddedQuestionnaireChooserBlock(page_type=['questionnaires.Survey'])), ('embedded_quiz', home.blocks.EmbeddedQuestionnaireChooserBlock(page_type=['questionnaires.Quiz'])), ('media', home.blocks.MediaBlock(icon='media')), ('chat_bot', wagtail.core.blocks.StructBlock([('subject', wagtail.core.blocks.CharBlock()), ('button_text', wagtail.core.blocks.CharBlock()), ('trigger_string', wagtail.core.blocks.CharBlock()), ('channel', messaging.blocks.ChatBotChannelChooserBlock())]))]),
        ),
        migrations.AlterField(
            model_name='iogtflatmenuitem',
            name='link_url',
            field=models.CharField(blank=True, help_text="If you are linking back to a URL on your own IoGT site, be sure to remove the domain and everything before it. For example 'http://sd.goodinternet.org/url/' should instead be '/url/'.", max_length=255, null=True, verbose_name='link to a custom URL'),
        ),
        migrations.CreateModel(
            name='IogtFlatMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='For internal reference only.', max_length=255, verbose_name='title')),
                ('heading', models.CharField(blank=True, help_text='If supplied, appears above the menu when rendered.', max_length=255, verbose_name='heading')),
                ('max_levels', models.PositiveSmallIntegerField(choices=[(1, '1: No sub-navigation (flat)'), (2, '2: Allow 1 level of sub-navigation'), (3, '3: Allow 2 levels of sub-navigation'), (4, '4: Allow 3 levels of sub-navigation')], default=1, help_text='The maximum number of levels to display when rendering this menu. The value can be overidden by supplying a different <code>max_levels</code> value to the <code>{% flat_menu %}</code> tag in your templates.', verbose_name='maximum levels')),
                ('handle', models.SlugField(help_text='The handle must be written in this format "[language]_[menu name of your choice]". For example, "en_menu1". If you would like the menu to be visible on the website you must add "_live" to the end, eg "en_menu1_live". Only one menu per language can be visible at one time.', max_length=100, verbose_name='handle')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.site', verbose_name='site')),
            ],
            options={
                'verbose_name': 'flat menu',
                'verbose_name_plural': 'flat menus',
                'abstract': False,
                'unique_together': {('site', 'handle')},
            },
            bases=(wagtailmenus.models.mixins.DefinesSubMenuTemplatesMixin, models.Model, wagtailmenus.models.menus.Menu),
        ),
        migrations.AlterField(
            model_name='iogtflatmenuitem',
            name='menu',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='iogt_flat_menu_items', to='home.iogtflatmenu'),
        ),
    ]
